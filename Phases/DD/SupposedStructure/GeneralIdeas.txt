Pojo are global entities accessible from Controllers, Repositories and 
Services. Mobile clients can also access this objects. In every case, the only
way to modify a Pojo is by using its getters/setters method.

Repositories are used to manage CRUD operations on DB and also implements 
specific queries on DB entities.
 
Controllers are used to intercept request, forward request to specific servlets,
 invoke services.
 
Services are used to manage business logic (algorithm, ...). We have two kind of
services: Internal and External.
Internal are used to handle PowerEnjoy logic (checkUserData(username, password),
getCarInsideRange(5km), enableMoneySavingOption(), ...)
External are used as a facade to external systems (f.e. MappingSystemService 
could have a method #isInsideRange(gpsPosition, centralPosition, 5km) which will
 call the appropriate MappingSystem method(s))
 
 
 
*** Servlets
Respond with JSON data
For a RESTful web service the desired response for a successful authentication 
should be 200 OK.
Failed Authentication should return 401.

*** RESTful
Overview https://spring.io/understanding/REST
Test http://jsonplaceholder.typicode.com/

*** JPA Repositories
http://docs.spring.io/spring-data/jpa/docs/1.5.0.RELEASE/reference/html/jpa.repositories.html

